// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NavBar unit tests should match the snapshot 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Component
    themeType="dark"
    toggleTheme={[MockFunction]}
  >
    <div
      className="makeStyles-root-2"
    >
      <WithStyles(ForwardRef(AppBar))
        position="static"
      >
        <ForwardRef(AppBar)
          classes={
            Object {
              "colorDefault": "MuiAppBar-colorDefault",
              "colorInherit": "MuiAppBar-colorInherit",
              "colorPrimary": "MuiAppBar-colorPrimary",
              "colorSecondary": "MuiAppBar-colorSecondary",
              "colorTransparent": "MuiAppBar-colorTransparent",
              "positionAbsolute": "MuiAppBar-positionAbsolute",
              "positionFixed": "MuiAppBar-positionFixed",
              "positionRelative": "MuiAppBar-positionRelative",
              "positionStatic": "MuiAppBar-positionStatic",
              "positionSticky": "MuiAppBar-positionSticky",
              "root": "MuiAppBar-root",
            }
          }
          position="static"
        >
          <WithStyles(ForwardRef(Paper))
            className="MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorPrimary"
            component="header"
            elevation={4}
            square={true}
          >
            <ForwardRef(Paper)
              className="MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorPrimary"
              classes={
                Object {
                  "elevation0": "MuiPaper-elevation0",
                  "elevation1": "MuiPaper-elevation1",
                  "elevation10": "MuiPaper-elevation10",
                  "elevation11": "MuiPaper-elevation11",
                  "elevation12": "MuiPaper-elevation12",
                  "elevation13": "MuiPaper-elevation13",
                  "elevation14": "MuiPaper-elevation14",
                  "elevation15": "MuiPaper-elevation15",
                  "elevation16": "MuiPaper-elevation16",
                  "elevation17": "MuiPaper-elevation17",
                  "elevation18": "MuiPaper-elevation18",
                  "elevation19": "MuiPaper-elevation19",
                  "elevation2": "MuiPaper-elevation2",
                  "elevation20": "MuiPaper-elevation20",
                  "elevation21": "MuiPaper-elevation21",
                  "elevation22": "MuiPaper-elevation22",
                  "elevation23": "MuiPaper-elevation23",
                  "elevation24": "MuiPaper-elevation24",
                  "elevation3": "MuiPaper-elevation3",
                  "elevation4": "MuiPaper-elevation4",
                  "elevation5": "MuiPaper-elevation5",
                  "elevation6": "MuiPaper-elevation6",
                  "elevation7": "MuiPaper-elevation7",
                  "elevation8": "MuiPaper-elevation8",
                  "elevation9": "MuiPaper-elevation9",
                  "outlined": "MuiPaper-outlined",
                  "root": "MuiPaper-root",
                  "rounded": "MuiPaper-rounded",
                }
              }
              component="header"
              elevation={4}
              square={true}
            >
              <header
                className="MuiPaper-root MuiAppBar-root MuiAppBar-positionStatic MuiAppBar-colorPrimary MuiPaper-elevation4"
              >
                <WithStyles(ForwardRef(Toolbar))>
                  <ForwardRef(Toolbar)
                    classes={
                      Object {
                        "dense": "MuiToolbar-dense",
                        "gutters": "MuiToolbar-gutters",
                        "regular": "MuiToolbar-regular",
                        "root": "MuiToolbar-root",
                      }
                    }
                  >
                    <div
                      className="MuiToolbar-root MuiToolbar-regular MuiToolbar-gutters"
                    >
                      <WithStyles(ForwardRef(IconButton))
                        aria-label="menu"
                        className="makeStyles-menuButton-3"
                        color="inherit"
                        edge="start"
                      >
                        <ForwardRef(IconButton)
                          aria-label="menu"
                          className="makeStyles-menuButton-3"
                          classes={
                            Object {
                              "colorInherit": "MuiIconButton-colorInherit",
                              "colorPrimary": "MuiIconButton-colorPrimary",
                              "colorSecondary": "MuiIconButton-colorSecondary",
                              "disabled": "Mui-disabled",
                              "edgeEnd": "MuiIconButton-edgeEnd",
                              "edgeStart": "MuiIconButton-edgeStart",
                              "label": "MuiIconButton-label",
                              "root": "MuiIconButton-root",
                              "sizeSmall": "MuiIconButton-sizeSmall",
                            }
                          }
                          color="inherit"
                          edge="start"
                        >
                          <WithStyles(ForwardRef(ButtonBase))
                            aria-label="menu"
                            centerRipple={true}
                            className="MuiIconButton-root makeStyles-menuButton-3 MuiIconButton-colorInherit MuiIconButton-edgeStart"
                            disabled={false}
                            focusRipple={true}
                          >
                            <ForwardRef(ButtonBase)
                              aria-label="menu"
                              centerRipple={true}
                              className="MuiIconButton-root makeStyles-menuButton-3 MuiIconButton-colorInherit MuiIconButton-edgeStart"
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "focusVisible": "Mui-focusVisible",
                                  "root": "MuiButtonBase-root",
                                }
                              }
                              disabled={false}
                              focusRipple={true}
                            >
                              <button
                                aria-label="menu"
                                className="MuiButtonBase-root MuiIconButton-root makeStyles-menuButton-3 MuiIconButton-colorInherit MuiIconButton-edgeStart"
                                disabled={false}
                                onBlur={[Function]}
                                onDragLeave={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                tabIndex={0}
                                type="button"
                              >
                                <span
                                  className="MuiIconButton-label"
                                >
                                  <MenuIcon>
                                    <div
                                      className="menu-icon--wrapper makeStyles-icon-1"
                                    >
                                      <svg
                                        fill="none"
                                        height="24"
                                        viewBox="0 0 24 24"
                                        width="24"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
                                          fill="#FFFFFF"
                                        />
                                      </svg>
                                    </div>
                                  </MenuIcon>
                                </span>
                                <NoSsr>
                                  <WithStyles(undefined)
                                    center={true}
                                  >
                                    <ForwardRef(TouchRipple)
                                      center={true}
                                      classes={
                                        Object {
                                          "child": "MuiTouchRipple-child",
                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                          "ripple": "MuiTouchRipple-ripple",
                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                          "root": "MuiTouchRipple-root",
                                        }
                                      }
                                    >
                                      <span
                                        className="MuiTouchRipple-root"
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          component={null}
                                          exit={true}
                                        />
                                      </span>
                                    </ForwardRef(TouchRipple)>
                                  </WithStyles(undefined)>
                                </NoSsr>
                              </button>
                            </ForwardRef(ButtonBase)>
                          </WithStyles(ForwardRef(ButtonBase))>
                        </ForwardRef(IconButton)>
                      </WithStyles(ForwardRef(IconButton))>
                      <WithStyles(ForwardRef(Typography))
                        className="makeStyles-title-4"
                        variant="h6"
                      >
                        <ForwardRef(Typography)
                          className="makeStyles-title-4"
                          classes={
                            Object {
                              "alignCenter": "MuiTypography-alignCenter",
                              "alignJustify": "MuiTypography-alignJustify",
                              "alignLeft": "MuiTypography-alignLeft",
                              "alignRight": "MuiTypography-alignRight",
                              "body1": "MuiTypography-body1",
                              "body2": "MuiTypography-body2",
                              "button": "MuiTypography-button",
                              "caption": "MuiTypography-caption",
                              "colorError": "MuiTypography-colorError",
                              "colorInherit": "MuiTypography-colorInherit",
                              "colorPrimary": "MuiTypography-colorPrimary",
                              "colorSecondary": "MuiTypography-colorSecondary",
                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                              "displayBlock": "MuiTypography-displayBlock",
                              "displayInline": "MuiTypography-displayInline",
                              "gutterBottom": "MuiTypography-gutterBottom",
                              "h1": "MuiTypography-h1",
                              "h2": "MuiTypography-h2",
                              "h3": "MuiTypography-h3",
                              "h4": "MuiTypography-h4",
                              "h5": "MuiTypography-h5",
                              "h6": "MuiTypography-h6",
                              "noWrap": "MuiTypography-noWrap",
                              "overline": "MuiTypography-overline",
                              "paragraph": "MuiTypography-paragraph",
                              "root": "MuiTypography-root",
                              "srOnly": "MuiTypography-srOnly",
                              "subtitle1": "MuiTypography-subtitle1",
                              "subtitle2": "MuiTypography-subtitle2",
                            }
                          }
                          variant="h6"
                        >
                          <h6
                            className="MuiTypography-root makeStyles-title-4 MuiTypography-h6"
                          >
                            DumbAFCbts
                          </h6>
                        </ForwardRef(Typography)>
                      </WithStyles(ForwardRef(Typography))>
                      <WithStyles(ForwardRef(Button))
                        className="user--login-button"
                        color="inherit"
                        onClick={[Function]}
                      >
                        <ForwardRef(Button)
                          className="user--login-button"
                          classes={
                            Object {
                              "colorInherit": "MuiButton-colorInherit",
                              "contained": "MuiButton-contained",
                              "containedPrimary": "MuiButton-containedPrimary",
                              "containedSecondary": "MuiButton-containedSecondary",
                              "containedSizeLarge": "MuiButton-containedSizeLarge",
                              "containedSizeSmall": "MuiButton-containedSizeSmall",
                              "disableElevation": "MuiButton-disableElevation",
                              "disabled": "Mui-disabled",
                              "endIcon": "MuiButton-endIcon",
                              "focusVisible": "Mui-focusVisible",
                              "fullWidth": "MuiButton-fullWidth",
                              "iconSizeLarge": "MuiButton-iconSizeLarge",
                              "iconSizeMedium": "MuiButton-iconSizeMedium",
                              "iconSizeSmall": "MuiButton-iconSizeSmall",
                              "label": "MuiButton-label",
                              "outlined": "MuiButton-outlined",
                              "outlinedPrimary": "MuiButton-outlinedPrimary",
                              "outlinedSecondary": "MuiButton-outlinedSecondary",
                              "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                              "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                              "root": "MuiButton-root",
                              "sizeLarge": "MuiButton-sizeLarge",
                              "sizeSmall": "MuiButton-sizeSmall",
                              "startIcon": "MuiButton-startIcon",
                              "text": "MuiButton-text",
                              "textPrimary": "MuiButton-textPrimary",
                              "textSecondary": "MuiButton-textSecondary",
                              "textSizeLarge": "MuiButton-textSizeLarge",
                              "textSizeSmall": "MuiButton-textSizeSmall",
                            }
                          }
                          color="inherit"
                          onClick={[Function]}
                        >
                          <WithStyles(ForwardRef(ButtonBase))
                            className="MuiButton-root MuiButton-text user--login-button MuiButton-colorInherit"
                            component="button"
                            disabled={false}
                            focusRipple={true}
                            focusVisibleClassName="Mui-focusVisible"
                            onClick={[Function]}
                            type="button"
                          >
                            <ForwardRef(ButtonBase)
                              className="MuiButton-root MuiButton-text user--login-button MuiButton-colorInherit"
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "focusVisible": "Mui-focusVisible",
                                  "root": "MuiButtonBase-root",
                                }
                              }
                              component="button"
                              disabled={false}
                              focusRipple={true}
                              focusVisibleClassName="Mui-focusVisible"
                              onClick={[Function]}
                              type="button"
                            >
                              <button
                                className="MuiButtonBase-root MuiButton-root MuiButton-text user--login-button MuiButton-colorInherit"
                                disabled={false}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onDragLeave={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                tabIndex={0}
                                type="button"
                              >
                                <span
                                  className="MuiButton-label"
                                >
                                  LOGIN
                                </span>
                                <NoSsr>
                                  <WithStyles(undefined)
                                    center={false}
                                  >
                                    <ForwardRef(TouchRipple)
                                      center={false}
                                      classes={
                                        Object {
                                          "child": "MuiTouchRipple-child",
                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                          "ripple": "MuiTouchRipple-ripple",
                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                          "root": "MuiTouchRipple-root",
                                        }
                                      }
                                    >
                                      <span
                                        className="MuiTouchRipple-root"
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          component={null}
                                          exit={true}
                                        />
                                      </span>
                                    </ForwardRef(TouchRipple)>
                                  </WithStyles(undefined)>
                                </NoSsr>
                              </button>
                            </ForwardRef(ButtonBase)>
                          </WithStyles(ForwardRef(ButtonBase))>
                        </ForwardRef(Button)>
                      </WithStyles(ForwardRef(Button))>
                      <div
                        className="theme-toggle--button"
                        onClick={[MockFunction]}
                      >
                        <WithStyles(ForwardRef(IconButton))
                          color="inherit"
                        >
                          <ForwardRef(IconButton)
                            classes={
                              Object {
                                "colorInherit": "MuiIconButton-colorInherit",
                                "colorPrimary": "MuiIconButton-colorPrimary",
                                "colorSecondary": "MuiIconButton-colorSecondary",
                                "disabled": "Mui-disabled",
                                "edgeEnd": "MuiIconButton-edgeEnd",
                                "edgeStart": "MuiIconButton-edgeStart",
                                "label": "MuiIconButton-label",
                                "root": "MuiIconButton-root",
                                "sizeSmall": "MuiIconButton-sizeSmall",
                              }
                            }
                            color="inherit"
                          >
                            <WithStyles(ForwardRef(ButtonBase))
                              centerRipple={true}
                              className="MuiIconButton-root MuiIconButton-colorInherit"
                              disabled={false}
                              focusRipple={true}
                            >
                              <ForwardRef(ButtonBase)
                                centerRipple={true}
                                className="MuiIconButton-root MuiIconButton-colorInherit"
                                classes={
                                  Object {
                                    "disabled": "Mui-disabled",
                                    "focusVisible": "Mui-focusVisible",
                                    "root": "MuiButtonBase-root",
                                  }
                                }
                                disabled={false}
                                focusRipple={true}
                              >
                                <button
                                  className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit"
                                  disabled={false}
                                  onBlur={[Function]}
                                  onDragLeave={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  tabIndex={0}
                                  type="button"
                                >
                                  <span
                                    className="MuiIconButton-label"
                                  >
                                    <LightbulbIcon
                                      variant="dark"
                                    >
                                      <div
                                        className="lightbulb-icon--wrapper toggle-light makeStyles-icon-1"
                                      >
                                        <svg
                                          fill="none"
                                          height="24"
                                          viewBox="0 0 24 24"
                                          width="24"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M3.55 18.54l1.41 1.41 1.79-1.8-1.41-1.41-1.79 1.8zM11 22.45h2V19.5h-2v2.95zM4 10.5H1v2h3v-2zm11-4.19V1.5H9v4.81C7.21 7.35 6 9.28 6 11.5c0 3.31 2.69 6 6 6s6-2.69 6-6c0-2.22-1.21-4.15-3-5.19zm5 4.19v2h3v-2h-3zm-2.76 7.66l1.79 1.8 1.41-1.41-1.8-1.79-1.4 1.4z"
                                            fill="#FFFFFF"
                                          />
                                        </svg>
                                      </div>
                                    </LightbulbIcon>
                                  </span>
                                  <NoSsr>
                                    <WithStyles(undefined)
                                      center={true}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={true}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(undefined)>
                                  </NoSsr>
                                </button>
                              </ForwardRef(ButtonBase)>
                            </WithStyles(ForwardRef(ButtonBase))>
                          </ForwardRef(IconButton)>
                        </WithStyles(ForwardRef(IconButton))>
                      </div>
                    </div>
                  </ForwardRef(Toolbar)>
                </WithStyles(ForwardRef(Toolbar))>
              </header>
            </ForwardRef(Paper)>
          </WithStyles(ForwardRef(Paper))>
        </ForwardRef(AppBar)>
      </WithStyles(ForwardRef(AppBar))>
    </div>
  </Component>
</Provider>
`;
